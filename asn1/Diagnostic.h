/*
 * Generated by asn1c-0.9.22.1409 (http://lionet.info/asn1c)
 * From ASN.1 module "MCS-PROTOCOL-3"
 * 	found in "mcs.asn1"
 * 	`asn1c -fnative-types -fskeletons-copy -fcompound-names -gen-PER`
 */

#ifndef	_Diagnostic_H_
#define	_Diagnostic_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NULL.h>
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum Diagnostic_PR {
	Diagnostic_PR_NOTHING,	/* No components present */
	Diagnostic_PR_dc_inconsistent_merge,
	Diagnostic_PR_dc_forbidden_PDU_downward,
	Diagnostic_PR_dc_forbidden_PDU_upward,
	Diagnostic_PR_dc_invalid_BER_encoding,
	Diagnostic_PR_dc_invalid_PER_encoding,
	Diagnostic_PR_dc_misrouted_user,
	Diagnostic_PR_dc_unrequested_confirm,
	Diagnostic_PR_dc_wrong_transport_priority,
	Diagnostic_PR_dc_channel_id_conflict,
	Diagnostic_PR_dc_token_id_conflict,
	Diagnostic_PR_dc_not_user_id_channel,
	Diagnostic_PR_dc_too_many_channels,
	Diagnostic_PR_dc_too_many_tokens,
	Diagnostic_PR_dc_too_many_users,
	/* Extensions may appear below */
	
} Diagnostic_PR;

/* Diagnostic */
typedef struct Diagnostic {
	Diagnostic_PR present;
	union Diagnostic_u {
		NULL_t	 dc_inconsistent_merge;
		NULL_t	 dc_forbidden_PDU_downward;
		NULL_t	 dc_forbidden_PDU_upward;
		NULL_t	 dc_invalid_BER_encoding;
		NULL_t	 dc_invalid_PER_encoding;
		NULL_t	 dc_misrouted_user;
		NULL_t	 dc_unrequested_confirm;
		NULL_t	 dc_wrong_transport_priority;
		NULL_t	 dc_channel_id_conflict;
		NULL_t	 dc_token_id_conflict;
		NULL_t	 dc_not_user_id_channel;
		NULL_t	 dc_too_many_channels;
		NULL_t	 dc_too_many_tokens;
		NULL_t	 dc_too_many_users;
		/*
		 * This type is extensible,
		 * possible extensions are below.
		 */
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Diagnostic_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Diagnostic;

#ifdef __cplusplus
}
#endif

#endif	/* _Diagnostic_H_ */
